language: cpp

dist: trusty

sudo: required

notifications:
    email:
        on_success: change
        on_failure: always

branches:
    only:
        - gh222

#os:
    #- linux
    ## - osx

#compiler:
    ## - clang
    #- gcc

#env:
    ## - TRAVIS_BUILD_TYPE=Debug TRAVIS_CMAKE_GENERATOR="Unix Makefiles"
    ## TODO build is taking too long, split even more, see script section
    #- TRAVIS_BUILD_TYPE=Release TRAVIS_CMAKE_GENERATOR="Unix Makefiles"


# matrix:
#     - exclude:
#         - os: osx
#           compiler: gcc
#     - allow_failures:
#         - os: osx
#         - compiler: clang

matrix:
  include:
    ## Linux, test the oldest gcc version we support, debug build
    #- name: "Linux, gcc 4.9 debug"
      #os: linux
      #addons:
        #apt:
          #sources:
            #- ubuntu-toolchain-r-test
          #packages:
            #- g++-4.9
      #env:
         #- MATRIX_EVAL="CC=gcc-4.9 && CXX=g++-4.9"
         #- TRAVIS_BUILD_TYPE=Debug
         #- TRAVIS_CMAKE_GENERATOR="Unix Makefiles"
      #before_install:
         #- ./environment/travis/linux/before_install.sh
      #install:
         #- source environment/travis/linux/install.sh
      #before_script:
         #- ./environment/travis/linux/before_script.sh


    # Linux, test the latest gcc version, release build
    - name: "Linux, gcc 8 release"
      os: linux
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-8
      env:
        - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
        - TRAVIS_BUILD_TYPE=Debug
        - TRAVIS_CMAKE_GENERATOR="Unix Makefiles"
      before_install:
         - ./environment/travis/linux/before_install.sh
      install:
         - source environment/travis/linux/install.sh
      before_script:
         - ./environment/travis/linux/before_script.sh


    # macOS, release build
    - name: "macOS, gcc7 release"
      os: osx
      osx_image: xcode9.4
      before_install:
      - brew update
      #- brew install --with-toolchain llvm
      - brew install boost boost-python qt5 qwt xerces-c gdal ncurses gcc@7
      #- clang --version
      #- clang++ --version
      - gcc --version
      - g++ --version

#addons:
    #apt:
        #sources:
            #- ubuntu-toolchain-r-test
        #packages:
            ## - clang-3.5
            #- g++-4.9
            #- libxerces-c-dev
            #- libxml2-dev
            #- libxslt1-dev
            #- xsltproc
            #- libboost-all-dev
            #- libncurses5-dev
            #- libpython-dev
            #- libxml2
            #- libxml2-utils
            #- mesa-common-dev

# before_install:
#     - sudo add-apt-repository ppa:beineri/opt-qt562-trusty -y
#     - sudo add-apt-repository ppa:ubuntugis/ubuntugis-unstable -y
#     - sudo apt-get update -qq
#
#     # Update CMake.
#     - wget --no-check-certificate http://www.cmake.org/files/v3.12/cmake-3.12.1-Linux-x86_64.tar.gz
#
#     # Travis Qwt 6.0 does not cooperate with Qt5
#     # We build and install those ourselves using Peacock.
#     - git clone --recursive https://github.com/geoneric/peacock.git
#
# install:
#     - set -e
#     - eval "${MATRIX_EVAL}"
#
#     - cd $TRAVIS_BUILD_DIR
#     - pip install --user --upgrade pip
#     - pip install --user --upgrade numpy
#     - pip install --user --upgrade docopt
#     - pip install --user --upgrade sphinx
#     - pip install --user --upgrade pillow
#
#     - sudo apt-get install qt56base
#     - export PATH=/opt/qt56/bin:$PATH
#
#     - sudo apt-get install gdal-bin libgdal-dev
#
#     - mkdir $TRAVIS_BUILD_DIR/local
#
#     - cd $TRAVIS_BUILD_DIR/local
#     - tar zxf ../cmake-3.12.1-Linux-x86_64.tar.gz
#     - export PATH=$TRAVIS_BUILD_DIR/local/cmake-3.12.1-Linux-x86_64/bin:$PATH
#
#     - cd $TRAVIS_BUILD_DIR/peacock
#  #   - export MAKEFLAGS='-j2'
#     - mkdir build
#     - cd build
#     - echo $CC
#     - echo $CXX
#     #- cmake -G"${TRAVIS_CMAKE_GENERATOR}" -DCMAKE_C_COMPILER=gcc-4.9 -DCMAKE_CXX_COMPILER=g++-4.9 -Dpeacock_prefix=$TRAVIS_BUILD_DIR/local -Dbuild_qwt=true -Dqwt_version=6.1.2 ..
#     - cmake -G"${TRAVIS_CMAKE_GENERATOR}" -Dpeacock_prefix=$TRAVIS_BUILD_DIR/local -Dbuild_qwt=true -Dqwt_version=6.1.2 ..
#     - cmake --build . --target all -- -j2
#
# before_script:
#     - eval "${MATRIX_EVAL}"
#     - mkdir $TRAVIS_BUILD_DIR/build
#     - cd $TRAVIS_BUILD_DIR/build
#     - echo $CC
#     - echo $CXX
#     #- cmake -G"${TRAVIS_CMAKE_GENERATOR}" -DCMAKE_C_COMPILER=gcc-4.9 -DCMAKE_CXX_COMPILER=g++-4.9 -DPEACOCK_PREFIX:PATH=$TRAVIS_BUILD_DIR/local -DCMAKE_BUILD_TYPE=${TRAVIS_BUILD_TYPE} -DFERN_BUILD_ALGORITHM:BOOL=TRUE -DPCRASTER_BUILD_TEST:BOOL=TRUE ..
#     - cmake -G"${TRAVIS_CMAKE_GENERATOR}" -DPEACOCK_PREFIX:PATH=$TRAVIS_BUILD_DIR/local -DCMAKE_BUILD_TYPE=${TRAVIS_BUILD_TYPE} -DFERN_BUILD_ALGORITHM:BOOL=TRUE -DPCRASTER_BUILD_TEST:BOOL=TRUE ..
#

script:
    - set -e  # Don't run the tests if the build fails.
    - cd $TRAVIS_BUILD_DIR/build
#    - export MAKEFLAGS='-j2'
    - python -c "import numpy as n; print(n.__version__); print(n.get_include());"
#    - cmake --build . --config ${TRAVIS_BUILD_TYPE} --target all -- -j2

#    - export MAKEFLAGS='-j1'
#    - cmake --build . --config ${TRAVIS_BUILD_TYPE} --target test
    - cd ..


